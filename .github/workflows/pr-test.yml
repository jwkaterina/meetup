name: 'Test PRs'
on:
  pull_request:
    paths:
      - src/**
      - test/**
      - package-lock.json
      - .github/workflows/pr-test.yml
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with: 
          node-version: 16
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{runner.OS}}-node-16
            ${{runner.OS}}-
      - name: Install Dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Run Unit Tests
        run: npm run test:cov
      - name: Post Test Coverage Results to PR
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
  amplify-backend-diff:
    runs-on: ubuntu-latest
    permissions:
      # this is required in order for the assume role to work
      # Refer to: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with: 
          node-version: 16
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{runner.OS}}-node-16
            ${{runner.OS}}-
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubMeetupDeployer
      - name: Create AWS Config
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile default
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile default
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile default
          aws configure set region eu-central-1 --profile default
          aws configure set output json --profile default
      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli
      - name: Setup Amplify
        run: |
          REACTCONFIG="{\"SourceDir\":\"src\",\"DistributionDir\":\"dist\",\"BuildCommand\":\"npm run-script build\",\"StartCommand\":\"npm run-script start\"\}"
          AWSCLOUDFORMATIONCONFIG="{\"configLevel\":\"project\",\"useProfile\":true,\"profileName\":\"default\",}"
          export AMPLIFY="{\"projectName\":\"meetup\",\"appId\":\"${{ secrets.AMPLIFY_APP_ID_STAGING }}\",\"envName\":\"staging\",\"defaultEditor\":\"code\"}"
          export FRONTEND="{\"frontend\":\"javascript\",\"framework\":\"none\",\"config\":$REACTCONFIG}"
          export PROVIDERS="{\"awscloudformation\":$AWSCLOUDFORMATIONCONFIG}"

          export AMPLIFY_GOOGLE_CLIENT_ID="${{ secrets.AMPLIFY_GOOGLE_CLIENT_ID }}"
          export AMPLIFY_GOOGLE_CLIENT_SECRET="${{ secrets.AMPLIFY_GOOGLE_CLIENT_SECRET }}"
          
          amplify pull --amplify $AMPLIFY --frontend $FRONTEND --providers $PROVIDERS --yes
      - name: Show Amplify Backend Diff
        run: amplify status -v
